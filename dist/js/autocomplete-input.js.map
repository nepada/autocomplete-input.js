{"version":3,"file":"autocomplete-input.js","sources":["../../src/js/index.js","../../src/js/autocomplete-input.js"],"sourcesContent":["import $ from 'jquery';\nimport 'corejs-typeahead/dist/typeahead.jquery';\nimport Bloodhound from 'corejs-typeahead/dist/bloodhound';\n\nfunction initializeInput(input) {\n    const $input = $(input);\n    if ($input.is('.tt-input, .tt-hint')) {\n        return;\n    }\n\n    const autocompleteUrl = $input.data('autocompleteUrl');\n    const autocompleteQueryPlaceholder = $input.data('autocompleteQueryPlaceholder') || '__QUERY_PLACEHOLDER__';\n    const autocompleteMinLength = $input.data('autocompleteMinLength') || 1;\n\n    $input.typeahead(\n        {\n            highlight: true,\n            autoselect: true,\n            minLength: autocompleteMinLength,\n        },\n        {\n            source: new Bloodhound({\n                queryTokenizer: Bloodhound.tokenizers.whitespace,\n                datumTokenizer: Bloodhound.tokenizers.whitespace,\n                remote: {\n                    url: autocompleteUrl,\n                    wildcard: autocompleteQueryPlaceholder,\n                },\n            }),\n        },\n    );\n}\n\nfunction initializeForm(form) {\n    $(form)\n        .find('input[data-autocomplete-url]')\n        .each((idx, input) => {\n            initializeInput(input);\n        });\n}\n\nfunction initializeAutocomplete(Nette) {\n    // Initialize all forms on document ready\n    $(() => {\n        $('form').each((idx, form) => {\n            initializeForm(form);\n        });\n    });\n\n    // Tap into Nette.initForm() to provide AJAX snippet support via e.g. Naja\n    const originalInitForm = Nette.initForm;\n    Nette.initForm = (form) => {\n        originalInitForm(form);\n        initializeForm(form);\n    };\n}\n\nexport default initializeAutocomplete;\n","import Nette from 'nette-forms';\nimport initializeAutocomplete from './index';\n\ninitializeAutocomplete(Nette);\n"],"names":["initializeInput","input","$input","$","is","autocompleteUrl","data","autocompleteQueryPlaceholder","autocompleteMinLength","typeahead","highlight","autoselect","minLength","source","Bloodhound","queryTokenizer","tokenizers","whitespace","datumTokenizer","remote","url","wildcard","initializeForm","form","find","each","idx","initializeAutocomplete","Nette","originalInitForm","initForm"],"mappings":";;;;;;;;;;IAIA,SAASA,eAAT,CAAyBC,KAAzB,EAAgC;IAC5B,MAAMC,MAAM,GAAGC,CAAC,CAACF,KAAD,CAAhB;;IACA,MAAIC,MAAM,CAACE,EAAP,CAAU,qBAAV,CAAJ,EAAsC;IAClC;IACH;;IAED,MAAMC,eAAe,GAAGH,MAAM,CAACI,IAAP,CAAY,iBAAZ,CAAxB;IACA,MAAMC,4BAA4B,GAAGL,MAAM,CAACI,IAAP,CAAY,8BAAZ,KAA+C,uBAApF;IACA,MAAME,qBAAqB,GAAGN,MAAM,CAACI,IAAP,CAAY,uBAAZ,KAAwC,CAAtE;IAEAJ,EAAAA,MAAM,CAACO,SAAP,CACI;IACIC,IAAAA,SAAS,EAAE,IADf;IAEIC,IAAAA,UAAU,EAAE,IAFhB;IAGIC,IAAAA,SAAS,EAAEJ;IAHf,GADJ,EAMI;IACIK,IAAAA,MAAM,EAAE,IAAIC,UAAJ,CAAe;IACnBC,MAAAA,cAAc,EAAED,UAAU,CAACE,UAAX,CAAsBC,UADnB;IAEnBC,MAAAA,cAAc,EAAEJ,UAAU,CAACE,UAAX,CAAsBC,UAFnB;IAGnBE,MAAAA,MAAM,EAAE;IACJC,QAAAA,GAAG,EAAEf,eADD;IAEJgB,QAAAA,QAAQ,EAAEd;IAFN;IAHW,KAAf;IADZ,GANJ;IAiBH;;IAED,SAASe,cAAT,CAAwBC,IAAxB,EAA8B;IAC1BpB,EAAAA,CAAC,CAACoB,IAAD,CAAD,CACKC,IADL,CACU,8BADV,EAEKC,IAFL,CAEU,UAACC,GAAD,EAAMzB,KAAN,EAAgB;IAClBD,IAAAA,eAAe,CAACC,KAAD,CAAf;IACH,GAJL;IAKH;;IAED,SAAS0B,sBAAT,CAAgCC,KAAhC,EAAuC;IACnC;IACAzB,EAAAA,CAAC,CAAC,YAAM;IACJA,IAAAA,CAAC,CAAC,MAAD,CAAD,CAAUsB,IAAV,CAAe,UAACC,GAAD,EAAMH,IAAN,EAAe;IAC1BD,MAAAA,cAAc,CAACC,IAAD,CAAd;IACH,KAFD;IAGH,GAJA,CAAD,CAFmC;;IASnC,MAAMM,gBAAgB,GAAGD,KAAK,CAACE,QAA/B;;IACAF,EAAAA,KAAK,CAACE,QAAN,GAAiB,UAACP,IAAD,EAAU;IACvBM,IAAAA,gBAAgB,CAACN,IAAD,CAAhB;IACAD,IAAAA,cAAc,CAACC,IAAD,CAAd;IACH,GAHD;IAIH;;ICpDDI,sBAAsB,CAACC,KAAD,CAAtB;;;;"}
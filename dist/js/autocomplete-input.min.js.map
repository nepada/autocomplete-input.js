{"version":3,"file":"autocomplete-input.min.js","sources":["../../src/js/index.js","../../src/js/autocomplete-input.js"],"sourcesContent":["import $ from 'jquery';\nimport 'corejs-typeahead/dist/typeahead.jquery';\nimport Bloodhound from 'corejs-typeahead/dist/bloodhound';\n\nfunction defaultTypeaheadFactory(input, options = {}) {\n    const $input = $(input);\n    const autocompleteUrl = $input.data('autocompleteUrl');\n    const autocompleteQueryPlaceholder = $input.data('autocompleteQueryPlaceholder') || '__QUERY_PLACEHOLDER__';\n    const autocompleteMinLength = $input.data('autocompleteMinLength');\n\n    $input.typeahead(\n        $.extend(\n            {\n                highlight: true,\n                autoselect: true,\n                minLength: 1,\n            },\n            options,\n            {\n                minLength: autocompleteMinLength,\n            },\n        ),\n        {\n            source: new Bloodhound({\n                queryTokenizer: Bloodhound.tokenizers.whitespace,\n                datumTokenizer: Bloodhound.tokenizers.whitespace,\n                remote: {\n                    url: autocompleteUrl,\n                    wildcard: autocompleteQueryPlaceholder,\n                },\n            }),\n        },\n    );\n\n    const $hint = $input.parent().find($input.data('ttTypeahead').selectors.hint);\n    // Remove marker data attribute to avoid re-initialization on hint input\n    $hint.removeAttr('data-autocomplete-url');\n    // Remove validation rules from the hint fake input\n    $hint.removeAttr('data-nette-rules');\n}\n\nfunction bootstrap5TypeaheadFactory(input, options = {}) {\n    defaultTypeaheadFactory(\n        input,\n        $.extend(\n            {\n                classNames: {\n                    menu: 'dropdown-menu',\n                    suggestion: 'dropdown-item',\n                    cursor: 'active',\n                },\n            },\n            options,\n        ),\n    );\n\n    const $input = $(input);\n\n    const $wrapper = $input.parent();\n    if ($wrapper.parent().is('.form-floating')) {\n        // Merge with form-floating wrapper, if possible\n        const attrs = Object.fromEntries(Array.from($wrapper.parent().prop('attributes')).map((item) => {return [item.name, item.value];}));\n        attrs.class = $wrapper.attr('class') + ' ' + (attrs.class || '');\n        attrs.style = $wrapper.attr('style') + ' ' + (attrs.style || '');\n        $wrapper.attr(attrs);\n        $wrapper.prevAll().prependTo($wrapper);\n        $wrapper.nextAll().appendTo($wrapper);\n        $wrapper.unwrap();\n    }\n\n    const $hint = $wrapper.find($input.data('ttTypeahead').selectors.hint);\n    // Reset placeholder to make floating labels working\n    $hint.attr({placeholder: ''});\n    // Reset copied background to avoid problems with validation\n    $hint.css({background: 'none'});\n}\n\nfunction initializeForm(form, typeaheadFactory) {\n    $(form)\n        .find('input[data-autocomplete-url]')\n        .each((idx, input) => {\n            if (!$(input).data('ttTypeahead')) {\n                typeaheadFactory(input);\n            }\n        });\n}\n\nfunction initializeAutocomplete(Nette, typeaheadFactory = null) {\n    typeaheadFactory = typeaheadFactory || defaultTypeaheadFactory;\n    // Initialize all forms on document ready\n    $(() => {\n        $('form').each((idx, form) => {\n            initializeForm(form, typeaheadFactory);\n        });\n    });\n\n    // Tap into Nette.initForm() to provide AJAX snippet support via e.g. Naja\n    const originalInitForm = Nette.initForm;\n    Nette.initForm = (form) => {\n        originalInitForm.apply(Nette, [form]);\n        initializeForm(form, typeaheadFactory);\n    };\n}\n\nexport {defaultTypeaheadFactory, bootstrap5TypeaheadFactory};\n\nexport default initializeAutocomplete;\n","import Nette from 'nette-forms';\nimport initializeAutocomplete from './index';\n\ninitializeAutocomplete(Nette);\n"],"names":["defaultTypeaheadFactory","input","options","arguments","length","undefined","$input","$","autocompleteUrl","data","autocompleteQueryPlaceholder","autocompleteMinLength","typeahead","extend","highlight","autoselect","minLength","source","Bloodhound","queryTokenizer","tokenizers","whitespace","datumTokenizer","remote","url","wildcard","$hint","parent","find","selectors","hint","removeAttr","initializeForm","form","typeaheadFactory","each","idx","Nette","originalInitForm","initForm","apply","initializeAutocomplete"],"mappings":"meAIA,SAASA,EAAwBC,GAAqB,IAAdC,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAE,EAC1CG,EAASC,EAAEN,GACXO,EAAkBF,EAAOG,KAAK,mBAC9BC,EAA+BJ,EAAOG,KAAK,iCAAmC,wBAC9EE,EAAwBL,EAAOG,KAAK,yBAE1CH,EAAOM,UACHL,EAAEM,OACE,CACIC,WAAW,EACXC,YAAY,EACZC,UAAW,GAEfd,EACA,CACIc,UAAWL,IAGnB,CACIM,OAAQ,IAAIC,EAAW,CACnBC,eAAgBD,EAAWE,WAAWC,WACtCC,eAAgBJ,EAAWE,WAAWC,WACtCE,OAAQ,CACJC,IAAKhB,EACLiB,SAAUf,OAM1B,IAAMgB,EAAQpB,EAAOqB,SAASC,KAAKtB,EAAOG,KAAK,eAAeoB,UAAUC,MAExEJ,EAAMK,WAAW,yBAEjBL,EAAMK,WAAW,mBACrB,CAsCA,SAASC,EAAeC,EAAMC,GAC1B3B,EAAE0B,GACGL,KAAK,gCACLO,MAAK,CAACC,EAAKnC,KACHM,EAAEN,GAAOQ,KAAK,gBACfyB,EAAiBjC,EACrB,GAEZ,EAEA,SAAgCoC,GAAgC,IAAzBH,EAAgB/B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KACtD+B,EAAmBA,GAAoBlC,EAEvCO,GAAE,KACEA,EAAE,QAAQ4B,MAAK,CAACC,EAAKH,KACjBD,EAAeC,EAAMC,EAAiB,GACxC,IAIN,IAAMI,EAAmBD,EAAME,SAC/BF,EAAME,SAAYN,IACdK,EAAiBE,MAAMH,EAAO,CAACJ,IAC/BD,EAAeC,EAAMC,EAAiB,CAE9C,CCnGAO,CAAuBJ"}
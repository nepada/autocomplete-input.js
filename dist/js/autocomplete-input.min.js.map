{"version":3,"file":"autocomplete-input.min.js","sources":["../../src/js/index.js","../../src/js/autocomplete-input.js"],"sourcesContent":["import $ from 'jquery';\nimport 'corejs-typeahead/dist/typeahead.jquery';\nimport Bloodhound from 'corejs-typeahead/dist/bloodhound';\n\nfunction initializeInput(input) {\n    const $input = $(input);\n    if ($input.is('.tt-input, .tt-hint')) {\n        return;\n    }\n\n    const autocompleteUrl = $input.data('autocompleteUrl');\n    const autocompleteQueryPlaceholder = $input.data('autocompleteQueryPlaceholder') || '__QUERY_PLACEHOLDER__';\n    const autocompleteMinLength = $input.data('autocompleteMinLength') || 1;\n\n    $input.typeahead(\n        {\n            highlight: true,\n            autoselect: true,\n            minLength: autocompleteMinLength,\n        },\n        {\n            source: new Bloodhound({\n                queryTokenizer: Bloodhound.tokenizers.whitespace,\n                datumTokenizer: Bloodhound.tokenizers.whitespace,\n                remote: {\n                    url: autocompleteUrl,\n                    wildcard: autocompleteQueryPlaceholder,\n                },\n            }),\n        },\n    );\n}\n\nfunction initializeForm(form) {\n    $(form)\n        .find('input[data-autocomplete-url]')\n        .each((idx, input) => {\n            initializeInput(input);\n        });\n}\n\nfunction initializeAutocomplete(Nette) {\n    // Initialize all forms on document ready\n    $(() => {\n        $('form').each((idx, form) => {\n            initializeForm(form);\n        });\n    });\n\n    // Tap into Nette.initForm() to provide AJAX snippet support via e.g. Naja\n    const originalInitForm = Nette.initForm;\n    Nette.initForm = (form) => {\n        originalInitForm(form);\n        initializeForm(form);\n    };\n}\n\nexport default initializeAutocomplete;\n","import Nette from 'nette-forms';\nimport initializeAutocomplete from './index';\n\ninitializeAutocomplete(Nette);\n"],"names":["initializeForm","form","$","find","each","idx","input","$input","is","autocompleteUrl","data","autocompleteQueryPlaceholder","autocompleteMinLength","typeahead","highlight","autoselect","minLength","source","Bloodhound","queryTokenizer","tokenizers","whitespace","datumTokenizer","remote","url","wildcard","initializeInput","Nette","originalInitForm","initForm","initializeAutocomplete"],"mappings":"meAiCA,SAASA,EAAeC,GACpBC,EAAED,GACGE,KAAK,gCACLC,MAAK,SAACC,EAAKC,IAhCpB,SAAyBA,GACrB,IAAMC,EAASL,EAAEI,GACjB,IAAIC,EAAOC,GAAG,uBAAd,CAIA,IAAMC,EAAkBF,EAAOG,KAAK,mBAC9BC,EAA+BJ,EAAOG,KAAK,iCAAmC,wBAC9EE,EAAwBL,EAAOG,KAAK,0BAA4B,EAEtEH,EAAOM,UACH,CACIC,WAAW,EACXC,YAAY,EACZC,UAAWJ,GAEf,CACIK,OAAQ,IAAIC,EAAW,CACnBC,eAAgBD,EAAWE,WAAWC,WACtCC,eAAgBJ,EAAWE,WAAWC,WACtCE,OAAQ,CACJC,IAAKf,EACLgB,SAAUd,MAlB1B,CAuBJ,CAMYe,CAAgBpB,EACpB,GACR,EAEA,SAAgCqB,GAE5BzB,GAAE,WACEA,EAAE,QAAQE,MAAK,SAACC,EAAKJ,GACjBD,EAAeC,EACnB,GACJ,IAGA,IAAM2B,EAAmBD,EAAME,SAC/BF,EAAME,SAAW,SAAC5B,GACd2B,EAAiB3B,GACjBD,EAAeC,GAEvB,CCpDA6B,CAAuBH"}